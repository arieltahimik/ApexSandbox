/*
* #127 - Register Student
* Note: This problem requires installation of a packaged data model. Install package in your org and read up on the data model
* The method registerStudent takes as input strings name, phone and email, and returns a string. 
* Implement the method to insert an apxio__Student__c record with the Name, apxio__Phone__c and apxio__Email__c fields filled out, 
* and return the autogenerated apxio__Registration_Number__c of the new record.
* 
* You will be working with the following custom object and field names for this problem:
* apxio__Student__c
* apxio__Student__c.apxio__Email__c
* apxio__Student__c.apxio__Phone__c
* apxio__Student__c.apxio__Registration_Number__c
*/

public String registerStudent(String name, String phone, String email) {

    // Create new student instance and populate fields then insert record
    apxio__Student__c student = new apxio__Student__c(
        Name = name, 
        apxio__Phone__c = phone, 
        apxio__Email__c = email);
    insert student;
    
    // Query the student that was just inserted and get the registration number
    // Query the Id against the Id of the freshly inserted record
    apxio__Student__c queryStudent = [
        SELECT apxio__Registration_Number__c 
        FROM apxio__Student__c 
        WHERE Id = :student.Id
    ];

    return queryStudent.apxio__Registration_Number__c;
}


/**
//TODO: Create test class for below code.
String result = registerStudent('Mehdi Maujood', '123-456-7890', 'maujood@apexsandbox.io');
List<apxio__Student__c> students = [SELECT Id, Name, apxio__Phone__c, apxio__Email__c, apxio__Registration_Number__c FROM apxio__Student__c];
System.assertEquals(1, students.size(), 'One student record expected');
System.assertEquals(result, students[0].apxio__Registration_Number__c , 'Incorrect Registration Number returned');
System.assertEquals('Mehdi Maujood', students[0].Name, 'Incorrect Student Name');
System.assertEquals('123-456-7890', students[0].apxio__Phone__c, 'Incorrect Student Phone');
System.assertEquals('maujood@apexsandbox.io', students[0].apxio__Email__c, 'Incorrect Student Email');

String result = registerStudent('Jane Doe', '321-654-1234', 'jane@apexsandbox.io');
List<apxio__Student__c> students = [SELECT Id, Name, apxio__Phone__c, apxio__Email__c, apxio__Registration_Number__c FROM apxio__Student__c];
System.assertEquals(1, students.size(), 'One student record expected');
System.assertEquals(result, students[0].apxio__Registration_Number__c , 'Incorrect Registration Number returned');
System.assertEquals('Jane Doe', students[0].Name, 'Incorrect Student Name');
System.assertEquals('321-654-1234', students[0].apxio__Phone__c, 'Incorrect Student Phone');
System.assertEquals('jane@apexsandbox.io', students[0].apxio__Email__c, 'Incorrect Student Email');

apxio__Student__c student = new apxio__Student__c();
student.Name = 'Random Student';
insert student;
String result = registerStudent('John Doe', '321-654-1234', 'jane@apexsandbox.io');
List<apxio__Student__c> students = [SELECT Id, Name, apxio__Phone__c, apxio__Email__c, apxio__Registration_Number__c FROM apxio__Student__c WHERE Name = 'John Doe'];
System.assertEquals(1, students.size(), 'A student record with name Jane Doe was not found');
System.assertEquals(result, students[0].apxio__Registration_Number__c , 'Incorrect Registration Number returned');
System.assertEquals('321-654-1234', students[0].apxio__Phone__c, 'Incorrect Student Phone');
System.assertEquals('jane@apexsandbox.io', students[0].apxio__Email__c, 'Incorrect Student Email');
*/